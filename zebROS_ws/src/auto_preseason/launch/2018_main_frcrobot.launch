<?xml version="1.0"?>
<launch>

	<!-- GDB functionality -->
	<arg name="debug" default="false" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

	<arg name="hw_or_sim" default="hw" />
	<arg name="static_map" default="True"/>

	<node name="base_trajectory_node" pkg="base_trajectory" type="base_trajectory_node" output="screen" > </node> 
	<group ns="frcrobot">

		<!-- Load controller settings -->
		<rosparam file="$(find ros_control_boilerplate)/config/2018_main_frcrobot.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/talon_swerve_offsets_new_1.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/elevator.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/elevator_offsets0.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/2018_swerve_drive.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller.yaml" command="load"/>
		<rosparam file="$(find teleop_joystick_control)/config/JoystickSubscriber.yaml" command="load"/>
        <rosparam file="$(find teleop_joystick_control)/config/teleopJoystickCommands.yaml" command="load"/>
		<rosparam file="$(find compressor_control_node)/config/regulate_compressor.yaml" command="load"/>
        <rosparam file="$(find behaviors)/config/autoInterpreterClient.yaml" command="load"/>
        <rosparam file="$(find behaviors)/config/autoInterpreterServer.yaml" command="load"/>
        <rosparam file="$(find robot_visualizer)/config/robot_visualize.yaml" command="load"/>

		<!-- Load hardware interface -->
		<node name="frcrobot_hardware_interface" pkg="ros_control_boilerplate" type="frcrobot_$(arg hw_or_sim)_main"
			output="screen" launch-prefix="$(arg launch_prefix)">
		</node>

		<!-- Load controller manager -->
		<node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
			output="screen" args="spawn joint_state_controller talon_state_controller imu_sensor_controller pdp_state_controller compressor_controller swerve_drive_controller elevator_controller rumble_controller robot_code_ready_controller" />

		<node name="point_gen" pkg="swerve_point_generator" type="point_gen" output="screen" />
	
		<node name="map_server" pkg="map_server" type="map_server" args="$(find controller_node)/maps/2018FRC_field.yaml" output="screen" if="$(arg static_map)">
			<param name="frame_id" value="/map"/>
		</node>

		<node name="robot_visualize" pkg="robot_visualizer" type="robot_visualize" output="screen" />
		<node name="profile_follow" pkg="robot_visualizer" type="profile_follow" output="screen" />

	</group>

    <group ns="rio">
        <node name="heartbeat_rio" pkg="heartbeat_node" type="heartbeat" output="screen" />
    </group>

    <group ns="jetson">
        <node name="heartbeat_jetson" pkg="heartbeat_node" type="heartbeat" output="screen" />
    </group>
        
	<node name="auto_loop" pkg="auto_preseason" type="auto_loop" output="screen" />

	<node name="cube_detection_node" pkg="cube_detection" type="cube_detection_node" output="screen"/>

	<node pkg="rosbag" type="play" name="player" output="screen" args="--clock /home/ofugikawa/Documents/Match-2_1.bag --topics /zed_goal/depth/depth_registered /zed_goal/left/image_rect_color -l"/>

</launch>
